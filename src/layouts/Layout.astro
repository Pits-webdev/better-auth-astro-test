---
interface Props {
	title: string;
}

const { title } = Astro.props;

import { auth } from "../lib/auth";

const session = await auth.api.getSession({
	headers: Astro.request.headers,
});
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<header>
			<nav class="nav">
				<a href="/">Home</a>

				{
					session ? (
						<button
							id="sign-out"
							style="background-color: black; color: white ; cursor: pointer; padding: 4px 12px; border-radius: 8px;"
							type="submit"
						>
							Sign Out
						</button>
					) : (
						<a href="/sign-in">Sign in</a>
					)
				}
				<a href="/sign-up">Sign up</a>
			</nav>
		</header>
		<slot />
	</body>
</html>

<script>
	import { client } from "../lib/auth-client";
	const signOut = document.querySelector("#sign-out");

	signOut?.addEventListener("click", async () => {
		await client.signOut();

		window.location.reload();
	});
</script>

<style is:global>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	header {
		width: 100%;
		height: 64px;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.nav {
		display: flex;
		align-items: center;
		gap: 2rem;
	}

	a {
		text-decoration: none;
		color: black;
	}
</style>
